(window.webpackJsonp=window.webpackJsonp||[]).push([[214],{527:function(t,a,e){"use strict";e.r(a);var v=e(7),_=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"深入拆解-tomcat-jetty"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深入拆解-tomcat-jetty"}},[t._v("#")]),t._v(" 深入拆解 Tomcat & Jetty")]),t._v(" "),a("blockquote",[a("p",[t._v("从源码角度深度探索 Java 中间件\n李号双 eBay 技术主管")])]),t._v(" "),a("p",[t._v("你将获得")]),t._v(" "),a("ul",[a("li",[t._v("通过 Tomcat&Jetty 深入理解 Java 进阶技术；")]),t._v(" "),a("li",[t._v("掌握了 Tomcat&Jetty 中间件的设计思想；")]),t._v(" "),a("li",[t._v("解读 Servlet 最新技术及实际应用；")]),t._v(" "),a("li",[t._v("让 Web 程序飞起来的性能调优策略。")])]),t._v(" "),a("h3",{attrs:{id:"课程介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#课程介绍"}},[t._v("#")]),t._v(" 课程介绍")]),t._v(" "),a("p",[t._v("作为一名 Java Web 开发工程师，不知道你是否有过下面这些经历：")]),t._v(" "),a("p",[t._v("对一些 Java 技术感觉似懂非懂？\n不知道怎么把 Java 技术用到实际的项目中？\n给你一个业务场景，拿不出靠谱的设计方案？\nSpring 框架层面的问题不知道如何定位和修复？\n性能调优没思路？\n这其中的很多问题其实最终都指向经验不足、设计能力有待提高，没有深刻理解 Web 的工作原理。而 Web 容器 Tomcat 或 Jetty，作为重要的系统中间件，连接着浏览器和你的 Web 应用，并且支撑着 Web 程序的运行，可以说，弄懂了 Tomcat 和 Jetty 的原理，Java Web 开发对你来说就毫无秘密可言。")]),t._v(" "),a("p",[t._v("那么再换个角度，从一名 Java Web 开发工程师的成长来看，每个人都会经历：")]),t._v(" "),a("p",[t._v("维护老项目；\n实现一个小模块；\n独立设计一个子系统；\n负责整体的架构方案。\n你会发现其中个人的成长可能都会从 Tomcat 或 Jetty 开始，逐步积累经验，提高设计能力，最终成长为一名架构师。而且作为初学者，想要找准方向突破深度，Tomcat 和 Jetty 也是非常好的选择。")]),t._v(" "),a("p",[t._v("当然，如果你现在是一名运维或者中间件开发乃至架构师，同样的，每天的工作多少都离不开与 Tomcat 或 Jetty 打交道，它总是会在不同场合以不同问题的形式出现在我们面前。")]),t._v(" "),a("p",[t._v("所以不管你是初学、已经在使用或是认为自己已经非常熟悉它们，都有必要重新深入进去，掌握其中的设计精髓，并为自己所用。")]),t._v(" "),a("p",[t._v("在这个专栏里，李号双将会详细剖析 Tomcat 和 Jetty 的架构设计和原理，梳理实践中经常遇到的问题，深入分析并提供解决方法；还会带你学习大神们如何“用”Java 技术，帮你提升设计思维，解决你 Java Web 后端开发的“痛点”。")]),t._v(" "),a("p",[t._v("专栏分为 6 个模块。")]),t._v(" "),a("p",[t._v("模块一，帮你重新理解 HTTP 协议和 Servlet 规范，为深入学习 Servlet 容器 Tomcat 和 Jetty 打下基础。")]),t._v(" "),a("p",[t._v("模块二，带你深刻掌握 Tomcat 和 Jetty 的整体架构，提炼它们的组件化设计要点，实战优化 Tomcat 启动速度。")]),t._v(" "),a("p",[t._v("模块三，深入讲解连接器的详细设计和工作原理，和你一起了解 Tomcat 如何实现非阻塞和异步 I/O 通信、如何扩展 Java 原生线程池、如何支持 WebSocket；详解 Jetty 的线程策略 EatWhatYouKill；总结 Tomcat 和 Jetty 的对象池技术以及高并发高性能之道。")]),t._v(" "),a("p",[t._v("模块四，详细分析容器的设计和工作原理，讨论 Tomcat 的热加载热部署、类加载机制、Web 应用的隔离以及如何实现 Servlet 规范、如何实现异步 Servlet；探讨 Jetty 如何实现带有上下文信息的责任链；总结 Tomcat 和 Jetty 运用的设计模式。")]),t._v(" "),a("p",[t._v("模块五，介绍通用组件的设计和工作原理，包括日志组件、Session 管理组件和集群通信组件。")]),t._v(" "),a("p",[t._v("模块六，从实战出发，介绍 JVM 调优的原理、Tomcat 性能监控以及如何对 Tomcat 进行调优，包括线程池和 I/O 的并发调优、内存调优和网络调优等。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://pan.baidu.com/s/1BYKBy9Nhk2X5MUgeNK4gXg",target:"_blank",rel:"noopener noreferrer"}},[t._v("资源下载"),a("OutboundLink")],1),t._v("提取码：http://dt2.8tupian.net/2/29369a82b200.pg1")])])}),[],!1,null,null,null);a.default=_.exports}}]);