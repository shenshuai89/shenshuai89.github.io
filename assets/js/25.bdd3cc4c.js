(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{336:function(t,a,r){"use strict";r.r(a);var s=r(7),e=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js-运行过程分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-运行过程分析"}},[t._v("#")]),t._v(" js 运行过程分析")]),t._v(" "),a("h4",{attrs:{id:"程序运行的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序运行的概念"}},[t._v("#")]),t._v(" 程序运行的概念")]),t._v(" "),a("p",[t._v("JS可以在浏览器中运行，运行在V8引擎中执行过程\n了解运行过程前，先弄清编程中的几个概念。")]),t._v(" "),a("ul",[a("li",[t._v("编译器（Compiler）：源代码在运行之前编译成计算机能执行的机器码，由于要编译完所有源代码后在执行，所以编译器需要更多的内存存储机器码，但执行快；如【java、c】等语言")]),t._v(" "),a("li",[t._v("解释器（Interpreter）：将源代码在运行时逐行解释执行，由于是一边解释一边执行，故启动快，执行慢；如【javascript、python】")])]),t._v(" "),a("ol",[a("li",[t._v("抽象语法树（AST）：解析器（Parser) 将源代码进行词法分析、语法分析后生成的抽象语法树，想要看生成的结果请戳：astexplorer.net/")]),t._v(" "),a("li",[t._v("字节码（Bytecode）：又称作中间代码，在JS解析中就是从AST -> 字节码 -> 机器码，字节码是后面才被V8引擎引入的，主要目的是为了解决机器码带来的内存占用问题；")]),t._v(" "),a("li",[t._v("即时编译器（JIT）：简单的理解就是一段代码被解释器执行多次之后就会变成热点代码（HotSpot），热点代码会被编译器直接编译成机器码，当代码再次执行时直接运行机器码，从而达到提高性能的目的，这种编译器和解释器混合使用的技术被叫做即时编译。")])]),t._v(" "),a("h4",{attrs:{id:"v8执行一段js代码的过程图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v8执行一段js代码的过程图"}},[t._v("#")]),t._v(" V8执行一段JS代码的过程图")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/images/article/image_2023-08-16_13-47-34.png",alt:"V8执行一段JS代码的过程图"}})]),t._v(" "),a("h4",{attrs:{id:"js即时编译器的运行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js即时编译器的运行过程"}},[t._v("#")]),t._v(" JS即时编译器的运行过程")]),t._v(" "),a("p",[a("img",{attrs:{src:"/assets/images/article/image_2023-08-16_14-12-09.png",alt:"JS即时编译器的运行过程"}})]),t._v(" "),a("p",[t._v("图片绘制参考来源："),a("a",{attrs:{href:"https://time.geekbang.org/column/intro/100033601",target:"_blank",rel:"noopener noreferrer"}},[t._v("极客时间-浏览器工作原理与实践"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);