(window.webpackJsonp=window.webpackJsonp||[]).push([[281],{595:function(v,a,_){"use strict";_.r(a);var t=_(7),e=Object(t.a)({},(function(){var v=this,a=v._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h2",{attrs:{id:"java-业务开发常见错误-100-例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-业务开发常见错误-100-例"}},[v._v("#")]),v._v(" Java 业务开发常见错误 100 例")]),v._v(" "),a("blockquote",[a("p",[v._v("全面避坑 + 最佳实践 = 健壮代码\n朱晔  贝壳金服资深架构师")])]),v._v(" "),a("p",[v._v("你将获得")]),v._v(" "),a("ul",[a("li",[v._v("130 个代码坑点及其解决方案")]),v._v(" "),a("li",[v._v("100 个场景化案例解读")]),v._v(" "),a("li",[v._v("25 次源码深度解析")]),v._v(" "),a("li",[v._v("使用 10 个工具定位问题根因")])]),v._v(" "),a("h3",{attrs:{id:"课程介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#课程介绍"}},[v._v("#")]),v._v(" 课程介绍")]),v._v(" "),a("p",[v._v("业务开发中的细节问题非常多，每个开发者都或多或少踩过坑。")]),v._v(" "),a("p",[v._v("有些细节问题，可能只会在某些特定情况下（比如高并发、多线程）出现，一经出现便会成为重大的生产事故；有些细节问题，可能暂时只会影响程序运行的性能，在量变到质变的瞬间爆发；还有些细节问题，比如所谓的服务器不稳定问题，或许运维同学改改配置、时不时重启下系统也能解决，但没从代码层面解决，就意味着程序里始终有一颗定时炸弹。")]),v._v(" "),a("p",[v._v("其实，我们不是不重视这些细节，更不是不想从根儿上解决问题，只是不知道问题到底出在了哪里。而要做好这些细节、避开这些坑，第一步就得知道它们是什么、在哪里、为什么会出现。")]),v._v(" "),a("p",[v._v("因此，我们邀请了朱晔老师，开设了“Java 业务开发常见错误 100 例”这个课程。他从 200 多个真实的生产事件和事故中，整理提炼了 100 个 Demo（以 Java 代码演示），涉及 130 多个坑点、50 多条最佳实践，去讲述业务开发中的常见错误。")]),v._v(" "),a("p",[v._v("这些内容不仅可以帮助你写出更好的代码，同时也有助于你进一步补全自己的知识网增加面试的信心。你甚至可以把这些案例当作代码审核的 Checklist，帮助别的项目一起避坑，帮助团队一起成长。")]),v._v(" "),a("p",[v._v("在这个课程中，每节课都是 Java 业务开发的一个核心关注点，每个知识点对应 2~5 个案例，并按照“知识介绍 -> 还原业务场景 -> 错误实现 -> 正确实现 -> 原理分析 -> 小总结”来讲解每个案例，不仅帮你避开这个知识点的常见坑，更让你能知道产生坑的根本原因，提升自己的技术能力。")]),v._v(" "),a("p",[v._v("在此，也特别感谢王少泽老师，承担了整个课程的技术审核和录音工作。")]),v._v(" "),a("p",[v._v("常见问题\n问：非 Java 开发者是否可以从本课程受益？")]),v._v(" "),a("p",[v._v("答：编程语言是相通的，Java 语言的许多坑点，其他语言也有。本课程不会专注于讲解语言本身的坑点，且涉及的案例贴近业务开发的各方各面，更侧重开发方面的误区和最佳实践。因此，即便你的开发语言不是 Java，学习这个课程也能有所收获。")]),v._v(" "),a("p",[v._v("问：《Effective Java》《码出高效：Java 开发手册》和本课程的区别是什么？")]),v._v(" "),a("p",[v._v("答：《Effective Java》注重 Java 语言、《码出高效：Java 开发手册》注重规范，而本课程覆盖使用 Java 进行业务开发涉及的各种常用框架和技术，不会局限于 Java 或者 JDK 本身，且设计篇、安全篇会从更高的视角去看开发时遇到的各种误区。因此，这个课程的讲授思路和内容，和这两本书有较大区别。")]),v._v(" "),a("p",[v._v("课程模块设计\n本课程包括三大模块，分别是代码篇、设计篇、安全篇。")]),v._v(" "),a("p",[v._v("代码篇：包含开发层面近 20 个方面的坑，涉及多线程、数据访问、池技术、日志异常、日期时间、IO 和序列化、Spring 框架等。这个模块，不仅会分析一些代码的错误写法，还会涉及对基础知识理解不透导致的踩坑。\n设计篇：讨论项目技术设计时的一些坑点或误区，涉及接口、缓存、异步、生产就绪、代码重复、数据存储等六个方面的设计。通过场景化的案例、针对可能实际遇到的问题，给出设计思路和最佳实践。\n安全篇：介绍后端开发最容易忽略、却又是从开发层面来防控效果最好的四个安全问题。包括客户端数据可信问题、数据和代码的隔离问题、资源防刷兜底问题，以及敏感数据的处理。")]),v._v(" "),a("p",[a("a",{attrs:{href:"https://pan.baidu.com/s/18HVEG-cksVBu9EoVty5Gkw",target:"_blank",rel:"noopener noreferrer"}},[v._v("资源下载"),a("OutboundLink")],1),v._v("提取码：http://dt2.8tupian.net/2/29369a131b200.pg1")])])}),[],!1,null,null,null);a.default=e.exports}}]);