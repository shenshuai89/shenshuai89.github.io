(window.webpackJsonp=window.webpackJsonp||[]).push([[227],{540:function(t,o,n){"use strict";n.r(o);var l=n(7),i=Object(l.a)({},(function(){var t=this,o=t._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h2",{attrs:{id:"快速上手-kotlin-开发"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#快速上手-kotlin-开发"}},[t._v("#")]),t._v(" 快速上手 Kotlin 开发")]),t._v(" "),o("blockquote",[o("p",[t._v("Java/Android 开发者的实战指南\n张涛 “开源实验室”博主，资深 Android 开发工程师")])]),t._v(" "),o("p",[t._v("你将获得")]),t._v(" "),o("ul",[o("li",[t._v("掌握 Kotlin 的语法和高级特性；")]),t._v(" "),o("li",[t._v("用 Kotlin 改造和迁移现有工程；")]),t._v(" "),o("li",[t._v("Kotlin 在团队协作中的注意事项；")]),t._v(" "),o("li",[t._v("深入学习 Kotlin 跨平台开发实战。")])]),t._v(" "),o("h3",{attrs:{id:"课程介绍"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#课程介绍"}},[t._v("#")]),t._v(" 课程介绍")]),t._v(" "),o("p",[t._v("在 Google I/O 2017 大会上，Google 宣布 Kotlin 成为 Android 开发的官方编程语言。")]),t._v(" "),o("p",[t._v("仅仅一年之后，就已经有 35% 的专业 Android 开发者在使用 Kotlin，其中 95% 的开发者都对 Kotlin 非常满意。")]),t._v(" "),o("p",[t._v("Kotlin 不仅仅可以用于 Android 应用开发，它简洁和表现力强地代码，与 Java 完全兼容和平滑的学习曲线，足以让程序员选择 Kotlin 在服务器端编程。同时，Kotlin 还可以用来开发前端 React 应用，真的是多个平台通吃。")]),t._v(" "),o("p",[t._v("在 Google 官方加持下，随着 Kotlin 跨平台等等特性的推出，可以预见未来 Kotlin 的使用者将越来越多。")]),t._v(" "),o("p",[t._v("所以，无论是想提高自己的技术水平，还是想获得更好的职业发展，学习 Kotlin 都是非常有必要的。")]),t._v(" "),o("p",[t._v("本课程分为三部分。")]),t._v(" "),o("p",[t._v("第一部分会帮助你快速熟悉 Kotlin 的特有语法特性，以及在与 Java 项目产生冲突时如何解决。")]),t._v(" "),o("p",[t._v("第二部分将带你深入的理解 Kotlin 语言的高级特性以及 Kotlin 特有语法背后的运行原理，同时掌握 Kotlin 协程库和 Google 推出的 KTX 扩展库的使用与内部实现原理。")]),t._v(" "),o("p",[t._v("第三部分将为你讲解 Kotlin 作为跨平台语言的特性，并介绍将 Java 项目迁移至 Kotlin 时需要注意的地方，更深入地理解 Kotlin 的优势和劣势，灵活利用 Kotlin 的扩展库以及跨平台特性，帮助团队更高效地进行实际项目的开发。")]),t._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"https://www.aliyundrive.com/s/vvMhAQYKKDd",target:"_blank",rel:"noopener noreferrer"}},[t._v("资源下载"),o("OutboundLink")],1),t._v("提取码：http://dt3.8tupian.net/2/29369a24b200.pg1")])])])}),[],!1,null,null,null);o.default=i.exports}}]);