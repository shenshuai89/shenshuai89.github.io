(window.webpackJsonp=window.webpackJsonp||[]).push([[239],{550:function(t,_,v){"use strict";v.r(_);var a=v(7),r=Object(a.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"go-并发编程实战课"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#go-并发编程实战课"}},[t._v("#")]),t._v(" Go 并发编程实战课")]),t._v(" "),_("blockquote",[_("p",[t._v("鸟窝带你攻克 Go 并发编程难题\n晁岳攀（鸟窝）  前微博技术专家，知名微服务框架 rpcx 作者")])]),t._v(" "),_("p",[t._v("你将获得")]),t._v(" "),_("ul",[_("li",[t._v("一个丰富完整的并发原语知识库")]),t._v(" "),_("li",[t._v("彻底搞懂并发原语的实现原理及使用技巧")]),t._v(" "),_("li",[t._v("20+ 大型项目的真实踩坑案例及解决方案")]),t._v(" "),_("li",[t._v("分布式场景中并发问题的应对策略")])]),t._v(" "),_("h3",{attrs:{id:"课程介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#课程介绍"}},[t._v("#")]),t._v(" 课程介绍")]),t._v(" "),_("p",[t._v("我们知道，Go 语言部署简单，自带完善的工具链，不仅容易上手，而且执行性能非常好，现在已经被越来越多的人当成主要的编程语言。最重要的是，它天然支持并发，这也是它的最大优势。")]),t._v(" "),_("p",[t._v("但是，并发编程入门容易，想要精通却很难，主要有五大问题：")]),t._v(" "),_("ul",[_("li",[t._v("在面对并发难题时，该选择哪个并发原语来解决问题呢？")]),t._v(" "),_("li",[t._v("如果多个并发原语都可以解决问题，那么，究竟哪个是最优解呢？比如说是用互斥锁，还是用 Channel。")]),t._v(" "),_("li",[t._v("并发编程不像是传统的串行编程，程序的运行存在着很大的不确定性，我们怎么才能让相应的任务按照我们设想的流程运行呢？")]),t._v(" "),_("li",[t._v("有时候，按照正常理解的并发方式去实现的程序，结果莫名其妙就 panic 或者死锁了，排查起来非常困难。")]),t._v(" "),_("li",[t._v("已知的并发原语都不能解决并发问题，程序写起来异常复杂，而且代码混乱，容易出错，该怎么办呢？")])]),t._v(" "),_("p",[t._v("鸟窝老师在多年的项目实战中，梳理了一套并发编程的知识体系，他把独立的知识点汇总到 Go 并发编程学习矩阵的“两大主线”之中，希望帮助你系统地掌握并发编程技能。本课程几乎涵盖了市面上可以见到的所有并发原语，而且，他会带领你深入地理解各种并发原语的实现机制，全面掌握它们的功能和使用方法。同时，还会具体讲解流行的 Go 开发项目中的常见错误场景及应对方案，全方位提升你的实战能力。")]),t._v(" "),_("h3",{attrs:{id:"课程设计"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#课程设计"}},[t._v("#")]),t._v(" 课程设计")]),t._v(" "),_("h4",{attrs:{id:"整个专栏分为-5-个模块。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#整个专栏分为-5-个模块。"}},[t._v("#")]),t._v(" 整个专栏分为 5 个模块。")]),t._v(" "),_("p",[t._v("基本并发原语：从标准库中的基本并发原语入手，详细介绍互斥锁 Mutex、RWMutex、Waitgroup、Cond、Pool、Context 等的实现机制和使用技巧，带你搞定并发编程中的常用类型。")]),t._v(" "),_("p",[t._v("原子操作：具体介绍标准库中的原子操作，这是其它并发原语的基础。学会了这部分内容，就可以自己创造新的并发原语。")]),t._v(" "),_("p",[t._v("Channel：Channel 类型是 Go 语言独特的类型，不仅会介绍它的基本用法，而且还会详解它的处理场景和应用模式，帮你规避陷阱。")]),t._v(" "),_("p",[t._v("扩展并发原语：目前来看，Go 开发组不准备在标准库中扩充并发原语了，但是还有一些并发原语应用得非常广泛。课程会重点讲解信号量、SingleFlight、循环栅栏、ErrGroup 等，让你能在处理一些并发问题时事半功倍。")]),t._v(" "),_("p",[t._v("分布式并发原语：分布式并发原语是应对大规模的应用程序中并发问题的并发类型，主要会介绍使用 etcd 实现的一些分布式并发原语，比如 Leader 选举、分布式互斥锁、分布式读写锁、分布式队列等，带你攻克分布式场景中的并发难题。")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://pan.baidu.com/s/1oAOXaeDGOKynaHDA94EHSA",target:"_blank",rel:"noopener noreferrer"}},[t._v("资源下载"),_("OutboundLink")],1),t._v("提取码：http://dt1.8tupian.net/2/29369a169b200.pg1")])])}),[],!1,null,null,null);_.default=r.exports}}]);