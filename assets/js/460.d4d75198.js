(window.webpackJsonp=window.webpackJsonp||[]).push([[460],{774:function(t,a,T){"use strict";T.r(a);var e=T(7),s=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"详解-http-协议基础与-go-语言实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#详解-http-协议基础与-go-语言实现"}},[t._v("#")]),t._v(" 详解 HTTP：协议基础与 Go 语言实现")]),t._v(" "),a("blockquote",[a("p",[t._v("[日] 涩川喜规  《Go 系统编程》作者")])]),t._v(" "),a("h2",{attrs:{id:"ai-导学"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ai-导学"}},[t._v("#")]),t._v(" AI 导学")]),t._v(" "),a("p",[t._v("你是否好奇，每天访问的网页、调用的 API 背后是如何高效、安全地完成数据传输的？这背后的核心正是 HTTP 协议。本课程系统讲解从 HTTP/1.0 到 HTTP/3 的演进历程，深入剖析协议语法、语义及实战开发技巧，特别结合 Go 语言实现，让你真正掌握后端通信的“底层逻辑”。")]),t._v(" "),a("p",[t._v("你将学到 HTTP 四大基本元素、状态码、缓存、安全机制、RESTful API 设计，以及 HTTP/2 多路复用、HTTP/3 基于 QUIC 的性能优化等关键技术。通过实战演练，掌握 Go 语言构建客户端与服务器、实现 TLS 通信、协议升级等核心技能。")]),t._v(" "),a("p",[t._v("这些内容不仅帮你深入理解 Web 架构的通信基石，更能提升你在微服务、云原生、高性能后端系统设计中的竞争力，为职业发展打开更广阔的空间。")]),t._v(" "),a("h2",{attrs:{id:"课程介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#课程介绍"}},[t._v("#")]),t._v(" 课程介绍")]),t._v(" "),a("p",[t._v("本书沿着 HTTP/1.0、HTTP/1.1、HTTP/2 和 HTTP/3 的发展历史，从方法和路径、首部、主体、状态码这 4 个 HTTP 的基本元素讲起，详细介绍了浏览器内部的动作、浏览器与服务器进行交互的方法等。针对各个版本的 HTTP，分别从语法和语义两个角度，通俗易懂地讲解了 HTTP 的协议规范，并结合用 Go 语言实现的具体的客户端代码示例，为读者阐明了 HTTP 是如何通过功能设计和扩展来实现高速化和安全性目标的。")]),t._v(" "),a("p",[t._v("本书内容全面，网罗了与 HTTP 相关的各种技术，包括简单的 HTTP 访问、表单的发送、缓存和 Cookie 的控制、Keep-Alive、SSL/TLS、协议升级、服务器推送、Server-Sent Events、WebSocket、DNS、CDN、RESTful API、Web 应用程序和安全方面的内容等。")]),t._v(" "),a("p",[t._v("本书适合 Web 开发工程师，以及对 HTTP 协议感兴趣的各层次读者阅读")]),t._v(" "),a("h2",{attrs:{id:"资源下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资源下载"}},[t._v("#")]),t._v(" 资源下载")]),t._v(" "),a("p",[t._v("下载地址： https://pan.baidu.com/s/1Guxs9dM1fTQJj-EVv-BQ4g 提取码：http://dt3.8tupian.com/2/29369a358b200.pg1")])])}),[],!1,null,null,null);a.default=s.exports}}]);